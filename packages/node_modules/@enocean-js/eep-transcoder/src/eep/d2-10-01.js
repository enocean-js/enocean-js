export const d21001 = {
  number: '0x01',
  title: 'Type 0x01',
  status: 'released',
  description: '',
  case: [{
    title: 'General Message',
    description: '<br/>exemplary illustration of data bytes 0/1:\n                <br/>\n                <img>graphics/D2-10-xx_00.png</img>\n                <br/>',
    datafield: [{
      reserved: {},
      bitoffs: '3',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '8',
      bitsize: '2'
    }, {
      data: 'Message identifier',
      shortcut: 'MID',
      description: 'Defines the type of message',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: {
          value: '0',
          description: 'General Message'
        }
      }
    }, {
      data: 'Message continuation flag',
      shortcut: 'MCF',
      description: 'Indicates if another telegram has to be expected or if the message is complete',
      info: {},
      bitoffs: '6',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Automatic message control'
        }
      }, {
        item: {
          value: '1',
          description: 'Incomplete'
        }
      }, {
        item: {
          value: '0',
          description: 'Complete'
        }
      }]
    }, {
      data: 'Information request classifier',
      shortcut: 'IRC',
      description: 'Defines the type of information request',
      info: {},
      bitoffs: '10',
      bitsize: '3',
      enum: [{
        item: {
          value: '7',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '6',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '5',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '4',
          description: 'Time program request'
        }
      }, {
        item: {
          value: '3',
          description: 'Room control setup request'
        }
      }, {
        item: {
          value: '2',
          description: 'Configuration request'
        }
      }, {
        item: {
          value: '1',
          description: 'Data request'
        }
      }, {
        item: {
          value: '0',
          description: 'Acknowledge request'
        }
      }]
    }, {
      data: 'Feedback classifier',
      shortcut: 'FBC',
      description: 'Defines the type of feedback',
      info: {},
      bitoffs: '13',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Message repetition request'
        }
      }, {
        item: {
          value: '1',
          description: 'Telegram repetition request'
        }
      }, {
        item: {
          value: '0',
          description: 'Acknowledge / heartbeat'
        }
      }]
    }, {
      data: 'General message type',
      shortcut: 'GMT',
      description: 'Indicates if the general message is a feedback or\n                an information request',
      info: {},
      bitoffs: '15',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Information request'
        }
      }, {
        item: {
          value: '0',
          description: 'Feedback'
        }
      }]
    }]
  }, {
    title: 'Data Message',
    description: {},
    datafield: [{
      reserved: {},
      bitoffs: '3',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '8',
      bitsize: '8'
    }, {
      reserved: {},
      bitoffs: '16',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '17',
      bitsize: '7'
    }, {
      reserved: {},
      bitoffs: '24',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '25',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '26',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '29',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '32',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '35',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '36',
      bitsize: '2'
    }, {
      reserved: {},
      bitoffs: '40',
      bitsize: '2'
    }, {
      reserved: {},
      bitoffs: '42',
      bitsize: '2'
    }, {
      data: 'Message identifier',
      shortcut: 'MID',
      description: 'Defines the type of message',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: {
          value: '1',
          description: 'Data Message'
        }
      }
    }, {
      data: 'Message continuation flag',
      shortcut: 'MCF',
      description: 'Indicates if another telegram has to be expected or if the message is complete',
      info: {},
      bitoffs: '6',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Automatic message control'
        }
      }, {
        item: {
          value: '1',
          description: 'Incomplete'
        }
      }, {
        item: {
          value: '0',
          description: 'Complete'
        }
      }]
    }, {
      data: 'Custom warning 2',
      shortcut: 'CW2',
      description: 'Flag for an application specific warning',
      info: {},
      bitoffs: '27',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'True'
        }
      }, {
        item: {
          value: '0',
          description: 'False'
        }
      }]
    }, {
      data: 'Custom warning 1',
      shortcut: 'CW1',
      description: 'Flag for an application specific warning',
      info: {},
      bitoffs: '28',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'True'
        }
      }, {
        item: {
          value: '0',
          description: 'False'
        }
      }]
    }, {
      data: 'Window open detection',
      shortcut: 'WOD',
      description: 'Indicates if an open window is detected',
      info: {},
      bitoffs: '30',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Open'
        }
      }, {
        item: {
          value: '1',
          description: 'Closed'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Battery status',
      shortcut: 'BS',
      description: 'Battery status',
      info: {},
      bitoffs: '33',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Critical'
        }
      }, {
        item: {
          value: '2',
          description: 'Low'
        }
      }, {
        item: {
          value: '1',
          description: 'Good'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Occupancy button status',
      shortcut: 'OBS',
      description: 'Indicates if the occupancy button was pressed and its occupancy status',
      info: {},
      bitoffs: '38',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Button pressed and unoccupied'
        }
      }, {
        item: {
          value: '1',
          description: 'Button pressed and occupied'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Room control mode',
      shortcut: 'RCM',
      description: 'Recent room control mode',
      info: {},
      bitoffs: '44',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Building protection'
        }
      }, {
        item: {
          value: '2',
          description: 'Pre-comfort'
        }
      }, {
        item: {
          value: '1',
          description: 'Economy'
        }
      }, {
        item: {
          value: '0',
          description: 'Comfort'
        }
      }]
    }, {
      data: 'Temperature set point validity',
      shortcut: 'SPV',
      description: 'Indicates if the temperature set point value is valid',
      info: {},
      bitoffs: '46',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Valid value'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Temperature validity',
      shortcut: 'TPV',
      description: 'Indicates if the temperature value is valid',
      info: {},
      bitoffs: '47',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Valid value'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Temperature set point',
      shortcut: 'TSP',
      description: 'Recent temperature set point',
      info: {},
      bitoffs: '48',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }, {
      data: 'Temperature',
      shortcut: 'TMP',
      description: 'Recent room temperature',
      info: {},
      bitoffs: '56',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }]
  }, {
    title: 'Configuration Message',
    description: {},
    datafield: [{
      reserved: {},
      bitoffs: '3',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '8',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '15',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '23',
      bitsize: '1'
    }, {
      reserved: {},
      bitoffs: '54',
      bitsize: '2'
    }, {
      reserved: {},
      bitoffs: '61',
      bitsize: '2'
    }, {
      data: 'Message identifier',
      shortcut: 'MID',
      description: 'Defines the type of message',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: {
          value: '2',
          description: 'Configuration Message'
        }
      }
    }, {
      data: 'Message continuation flag',
      shortcut: 'MCF',
      description: 'Indicates if another telegram has to be expected or if the message is complete',
      info: {},
      bitoffs: '6',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Automatic message control'
        }
      }, {
        item: {
          value: '1',
          description: 'Incomplete'
        }
      }, {
        item: {
          value: '0',
          description: 'Complete'
        }
      }]
    }, {
      data: 'Temperature scale lock',
      shortcut: 'TSL',
      description: 'Indicates if the temperature scale can be changed at the room control panel',
      info: {},
      bitoffs: '9',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Display content lock',
      shortcut: 'DCL',
      description: 'Indicates if the display content can be changed at the room control panel',
      info: {},
      bitoffs: '10',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Date / time lock',
      shortcut: 'DTL',
      description: 'Indicates if date and time can be changed at the room control panel',
      info: {},
      bitoffs: '11',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Time program lock',
      shortcut: 'TPL',
      description: 'Indicates if the time program can be changed at the room control panel',
      info: {},
      bitoffs: '12',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Occupancy button lock',
      shortcut: 'OBL',
      description: 'Indicates if the occupancy status can be changed at the room control panel',
      info: {},
      bitoffs: '13',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Temperature set point lock',
      shortcut: 'SPL',
      description: 'Indicates if the temperature set point can be changed at the room control panel',
      info: {},
      bitoffs: '14',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Radio communication interval',
      shortcut: 'RCI',
      description: 'Defines the longest time between two consecutive telegrams (clock-based communication)',
      info: {},
      bitoffs: '16',
      bitsize: '6',
      enum: [{
        item: {
          value: '63',
          description: '24 hours'
        }
      }, {
        item: {
          value: '62',
          description: '12 hours'
        }
      }, {
        item: {
          value: '61',
          description: '3 hours'
        }
      }, {
        item: {
          min: '1',
          max: '60',
          description: '1...60 min'
        }
      }, {
        item: {
          value: '0',
          description: 'No communication interval'
        }
      }]
    }, {
      data: 'Key lock',
      shortcut: 'KL',
      description: 'Indicates if all buttons on the device are locked',
      info: {},
      bitoffs: '22',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Unlocked'
        }
      }, {
        item: {
          value: '0',
          description: 'Locked'
        }
      }]
    }, {
      data: 'Display content',
      shortcut: 'DC',
      description: 'Defines the main display content',
      info: {},
      bitoffs: '24',
      bitsize: '3',
      enum: [{
        item: {
          value: '7',
          description: 'Humidity'
        }
      }, {
        item: {
          value: '6',
          description: 'Display off'
        }
      }, {
        item: {
          value: '5',
          description: 'Temperature set point'
        }
      }, {
        item: {
          value: '4',
          description: 'Room temperature (external)'
        }
      }, {
        item: {
          value: '3',
          description: 'Room temperature (internal)'
        }
      }, {
        item: {
          value: '2',
          description: 'Time'
        }
      }, {
        item: {
          value: '1',
          description: 'Default'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Temperature scale',
      shortcut: 'TS',
      description: 'Defines the used temperature scale for the room control panel display and menus',
      info: {},
      bitoffs: '27',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: '° Fahrenheit'
        }
      }, {
        item: {
          value: '2',
          description: '° Celsius'
        }
      }, {
        item: {
          value: '1',
          description: 'Default'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Daylight saving time flag',
      shortcut: 'DST',
      description: 'Indicates if daylight saving time is supported',
      info: {},
      bitoffs: '29',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Not supported'
        }
      }, {
        item: {
          value: '0',
          description: 'Supported'
        }
      }]
    }, {
      data: 'Time notation',
      shortcut: 'TN',
      description: 'Defines the used time notation',
      info: {},
      bitoffs: '30',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: '12 h'
        }
      }, {
        item: {
          value: '2',
          description: '24 h'
        }
      }, {
        item: {
          value: '1',
          description: 'Default'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Day',
      shortcut: 'DAY',
      description: 'Date format: YYYY/MM/DD',
      info: {},
      bitoffs: '32',
      bitsize: '5',
      range: {
        min: '1',
        max: '31'
      },
      scale: {
        min: '1',
        max: '31'
      },
      unit: 'day'
    }, {
      data: 'Month',
      shortcut: 'MON',
      description: 'Date format: YYYY/MM/DD',
      info: {},
      bitoffs: '37',
      bitsize: '4',
      range: {
        min: '1',
        max: '12'
      },
      scale: {
        min: '1',
        max: '12'
      },
      unit: 'mon'
    }, {
      data: 'Year',
      shortcut: 'YR',
      description: 'Date format: YYYY/MM/DD\n                  <br/>year = 2000 + x',
      info: {},
      bitoffs: '41',
      bitsize: '7',
      range: {
        min: '0',
        max: '127'
      },
      scale: {
        min: '2000',
        max: '2127'
      },
      unit: 'year'
    }, {
      data: 'Minute',
      shortcut: 'MIN',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '48',
      bitsize: '6',
      range: {
        min: '0',
        max: '59'
      },
      scale: {
        min: '0',
        max: '59'
      },
      unit: 'min'
    }, {
      data: 'Hour',
      shortcut: 'HR',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '56',
      bitsize: '5',
      range: {
        min: '0',
        max: '23'
      },
      scale: {
        min: '0',
        max: '23'
      },
      unit: 'h'
    }, {
      data: 'Date / time update flag',
      shortcut: 'DTU',
      description: 'Indicates if an update of date or time is provided',
      info: {},
      bitoffs: '63',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Update'
        }
      }, {
        item: {
          value: '0',
          description: 'No update'
        }
      }]
    }]
  }, {
    title: 'Room Control Setup',
    description: {},
    datafield: [{
      reserved: {},
      bitoffs: '3',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '16',
      bitsize: '8'
    }, {
      reserved: {},
      bitoffs: '40',
      bitsize: '4'
    }, {
      reserved: {},
      bitoffs: '45',
      bitsize: '1'
    }, {
      data: 'Message identifier',
      shortcut: 'MID',
      description: 'Defines the type of message',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: {
          value: '3',
          description: 'Room Control Setup'
        }
      }
    }, {
      data: 'Message continuation flag',
      shortcut: 'MCF',
      description: 'Indicates if another telegram has to be expected or if the message is complete',
      info: {},
      bitoffs: '6',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Automatic message control'
        }
      }, {
        item: {
          value: '1',
          description: 'Incomplete'
        }
      }, {
        item: {
          value: '0',
          description: 'Complete'
        }
      }]
    }, {
      data: 'Temperature set point building protection mode',
      shortcut: 'SPB',
      description: 'Temperature set point building protection mode',
      info: {},
      bitoffs: '8',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }, {
      data: 'Temperature set point economy mode',
      shortcut: 'SPE',
      description: 'Temperature set point economy mode',
      info: {},
      bitoffs: '24',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }, {
      data: 'Temperature set point comfort mode',
      shortcut: 'SPC',
      description: 'Temperature set point comfort mode',
      info: {},
      bitoffs: '32',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }, {
      data: 'Temperature set point flag building protection mode',
      shortcut: 'SFB',
      description: 'Indicates if a temperature set point for the building protection mode is provided',
      info: {},
      bitoffs: '44',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Valid value'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Temperature set point flag economy mode',
      shortcut: 'SFE',
      description: 'Indicates if a temperature set point for the economy mode is provided',
      info: {},
      bitoffs: '46',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Valid value'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }, {
      data: 'Temperature set point flag comfort mode',
      shortcut: 'SFC',
      description: 'Indicates if a temperature set point for the comfort mode is provided',
      info: {},
      bitoffs: '47',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Valid value'
        }
      }, {
        item: {
          value: '0',
          description: 'No change'
        }
      }]
    }]
  }, {
    title: 'Time Program Setup',
    description: {},
    datafield: [{
      reserved: {},
      bitoffs: '3',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '8',
      bitsize: '2'
    }, {
      reserved: {},
      bitoffs: '16',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '24',
      bitsize: '2'
    }, {
      reserved: {},
      bitoffs: '32',
      bitsize: '3'
    }, {
      reserved: {},
      bitoffs: '46',
      bitsize: '1'
    }, {
      data: 'Message identifier',
      shortcut: 'MID',
      description: 'Defines the type of message',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: {
          value: '4',
          description: 'Time Program Setup'
        }
      }
    }, {
      data: 'Message continuation flag',
      shortcut: 'MCF',
      description: 'Indicates if another telegram has to be expected or if the message is complete',
      info: {},
      bitoffs: '6',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Reserved'
        }
      }, {
        item: {
          value: '2',
          description: 'Automatic message control'
        }
      }, {
        item: {
          value: '1',
          description: 'Incomplete'
        }
      }, {
        item: {
          value: '0',
          description: 'Complete'
        }
      }]
    }, {
      data: 'End time: Minute',
      shortcut: 'ETM',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '10',
      bitsize: '6',
      range: {
        min: '0',
        max: '59'
      },
      scale: {
        min: '0',
        max: '59'
      },
      unit: '1'
    }, {
      data: 'End time: Hour',
      shortcut: 'ETH',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '19',
      bitsize: '5',
      range: {
        min: '0',
        max: '23'
      },
      scale: {
        min: '0',
        max: '23'
      },
      unit: '1'
    }, {
      data: 'Start time: Minute',
      shortcut: 'STM',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '26',
      bitsize: '6',
      range: {
        min: '0',
        max: '59'
      },
      scale: {
        min: '0',
        max: '59'
      },
      unit: '1'
    }, {
      data: 'Start time: Hour',
      shortcut: 'STH',
      description: 'Time format: hh:mm',
      info: {},
      bitoffs: '35',
      bitsize: '5',
      range: {
        min: '0',
        max: '23'
      },
      scale: {
        min: '0',
        max: '23'
      },
      unit: '1'
    }, {
      data: 'Period',
      shortcut: 'PER',
      description: 'Assigned period of time (weekdays) for the provided schedule time',
      info: {},
      bitoffs: '40',
      bitsize: '4',
      enum: [{
        item: {
          value: '15',
          description: 'Friday - Monday'
        }
      }, {
        item: {
          value: '14',
          description: 'Friday - Sunday'
        }
      }, {
        item: {
          value: '13',
          description: 'Thursday - Friday'
        }
      }, {
        item: {
          value: '12',
          description: 'Wednesday - Friday'
        }
      }, {
        item: {
          value: '11',
          description: 'Tuesday - Thursday'
        }
      }, {
        item: {
          value: '10',
          description: 'Monday - Wednesday'
        }
      }, {
        item: {
          value: '9',
          description: 'Sunday'
        }
      }, {
        item: {
          value: '8',
          description: 'Saturday'
        }
      }, {
        item: {
          value: '7',
          description: 'Friday'
        }
      }, {
        item: {
          value: '6',
          description: 'Thursday'
        }
      }, {
        item: {
          value: '5',
          description: 'Wednesday'
        }
      }, {
        item: {
          value: '4',
          description: 'Tuesday'
        }
      }, {
        item: {
          value: '3',
          description: 'Monday'
        }
      }, {
        item: {
          value: '2',
          description: 'Saturday - Sunday'
        }
      }, {
        item: {
          value: '1',
          description: 'Monday - Friday'
        }
      }, {
        item: {
          value: '0',
          description: 'Monday - Sunday'
        }
      }]
    }, {
      data: 'Room control mode',
      shortcut: 'RCM',
      description: 'Assigned room control mode for the provided schedule time',
      info: {},
      bitoffs: '44',
      bitsize: '2',
      enum: [{
        item: {
          value: '3',
          description: 'Building protection'
        }
      }, {
        item: {
          value: '2',
          description: 'Pre-comfort'
        }
      }, {
        item: {
          value: '1',
          description: 'Economy'
        }
      }, {
        item: {
          value: '0',
          description: 'Comfort'
        }
      }]
    }, {
      data: 'Time program deletion',
      shortcut: 'TPD',
      description: 'Deletes the stored time program',
      info: {},
      bitoffs: '47',
      bitsize: '1',
      enum: [{
        item: {
          value: '1',
          description: 'Deletion'
        }
      }, {
        item: {
          value: '0',
          description: 'No deletion'
        }
      }]
    }]
  }],
  originalIndex: 184,
  eep: 'd2-10-01',
  rorg_title: 'VLD Telegram',
  rorg_number: '0xD2',
  func_title: 'Room Control Panels with Temperature & Fan Speed Control, Room Status Information and Time Program',
  func_number: '0x10',
  submitter: [
    'Kieback&Peter GmbH & CO KG'
  ]
}
