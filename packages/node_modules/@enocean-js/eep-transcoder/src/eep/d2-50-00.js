export const d25000 = {
  number: '0x00',
  title: 'Type 0x00',
  status: 'released',
  description: '',
  case: [{
    title: 'Telegram Definition: ‘Ventilation Remote Transmission Request Message’',
    description: 'The ‘Ventilation Remote Transmission Request Message’ queries a particular\n                status message from the heat-recovery ventilation unit.\n                Thus status messages can be obtained at any time or at a higher update\n                rate than the heartbeat rate, e.g. during commissioning.\n                <br/>\n                <br/>Direction: Gateway --> Heat-recovery ventilation unit\n                <br/>\n                <img>graphics/D2-50-ZZ-No001.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: 0,
        bitsize: 3,
        value: 0
      }
    },
    datafield: [{
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Defines the message type',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Ventilation remote transmission request'
        }, {
          value: '1',
          description: 'Ventilation control'
        }, {
          value: '2',
          description: 'Ventilation basic status'
        }, {
          value: '3',
          description: 'Ventilation extended status'
        }, {
          value: '4',
          description: 'Reserved'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Requested Message Type',
      shortcut: 'RMT',
      description: 'Defines the message type, which is requested by the remote device',
      info: {},
      bitoffs: '5',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Ventilation basic status'
        }, {
          value: '1',
          description: 'Ventilation extended status'
        }, {
          value: '2',
          description: 'Reserved'
        }, {
          value: '3',
          description: 'Reserved'
        }, {
          value: '4',
          description: 'Reserved'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }]
      }
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '3',
      bitsize: '2'
    }]
  }, {
    title: 'Telegram Definition: ‘Ventilation Control Message’',
    description: 'The ‘Ventilation Control Message’ changes the operating mode,\n              the state of several actuators and a subset of control parameters.\n              <br/>\n              <br/>Direction: Gateway --> Heat-recovery ventilation unit\n              <br/>\n              <img>graphics/D2-50-ZZ-No002.png</img>\n              <br/>',
    condition: {
      datafield: {
        bitoffs: 0,
        bitsize: 3,
        value: 1
      }
    },
    datafield: [{
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '3',
      bitsize: '1'
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '12',
      bitsize: '4'
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '24',
      bitsize: '1'
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '32',
      bitsize: '1'
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '40',
      bitsize: '1'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Defines the message type',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Ventilation remote transmission request'
        }, {
          value: '1',
          description: 'Ventilation control'
        }, {
          value: '2',
          description: 'Ventilation basic status'
        }, {
          value: '3',
          description: 'Ventilation extended status'
        }, {
          value: '4',
          description: 'Reserved'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Direct Operation Mode Control',
      shortcut: 'DOMC',
      description: 'Selects ventilation mode/level',
      info: {},
      bitoffs: '4',
      bitsize: '4',
      enum: {
        item: [{
          value: '0',
          description: 'Off'
        }, {
          value: '1',
          description: 'Level 1'
        }, {
          value: '2',
          description: 'Level 2'
        }, {
          value: '3',
          description: 'Level 3'
        }, {
          value: '4',
          description: 'Level 4'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }, {
          value: '8',
          description: 'Reserved'
        }, {
          value: '9',
          description: 'Reserved'
        }, {
          value: '10',
          description: 'Reserved'
        }, {
          value: '11',
          description: 'Automatic'
        }, {
          value: '12',
          description: 'Automatic on demand'
        }, {
          value: '13',
          description: 'Supply air only'
        }, {
          value: '14',
          description: 'Exhaust air only'
        }, {
          value: '15',
          description: 'no action (keep current ventilation mode/level)'
        }]
      }
    }, {
      data: 'Operation Mode Control',
      shortcut: 'OMC',
      description: 'Selects the next resp. previous available ventilation mode/level',
      info: {},
      bitoffs: '8',
      bitsize: '2',
      enum: {
        item: [{
          value: '0',
          description: 'no action'
        }, {
          value: '1',
          description: 'select next operation mode (edge-trigger)'
        }, {
          value: '2',
          description: 'select previous operation mode (edge-trigger)'
        }, {
          value: '3',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Heat Exchanger Bypass Control',
      shortcut: 'HBC',
      description: 'Manual override of automatic heat exchanger bypass control',
      info: {},
      bitoffs: '10',
      bitsize: '2',
      enum: {
        item: [{
          value: '0',
          description: 'no action'
        }, {
          value: '1',
          description: 'close bypass (edge-trigger)'
        }, {
          value: '2',
          description: 'open bypass (edge-trigger)'
        }, {
          value: '3',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Timer Operation Mode Control',
      shortcut: 'TOMC',
      description: 'Enables Timer Operation Mode, i.e. a particular ventilation mode\n                is activated for a defined time',
      info: {},
      bitoffs: '16',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'no action'
        }, {
          value: '1',
          description: 'start timer operation mode (edge-trigger)'
        }]
      }
    }, {
      data: 'CO2 Threshold',
      shortcut: 'COT',
      description: 'Overrides CO2 threshold for CO2 control in automatic mode',
      info: {},
      bitoffs: '17',
      bitsize: '7',
      enum: {
        item: [{
          min: '0',
          max: '100',
          description: '0...100 %'
        }, {
          min: '101',
          max: '126',
          description: 'Reserved'
        }, {
          value: '127',
          description: 'Default (use threshold configured in device)'
        }]
      }
    }, {
      data: 'Humidity Threshold',
      shortcut: 'HT',
      description: 'Overrides humidity threshold for humidity control in automatic mode',
      info: {},
      bitoffs: '25',
      bitsize: '7',
      enum: {
        item: [{
          min: '0',
          max: '100',
          description: '0...100 %'
        }, {
          min: '101',
          max: '126',
          description: 'Reserved'
        }, {
          value: '127',
          description: 'Default (use threshold configured in device)'
        }]
      }
    }, {
      data: 'Air Quality Threshold',
      shortcut: 'AQT',
      description: 'Overrides air quality threshold for air quality control in automatic mode',
      info: {},
      bitoffs: '33',
      bitsize: '7',
      enum: {
        item: [{
          min: '0',
          max: '100',
          description: '0...100 %'
        }, {
          min: '101',
          max: '126',
          description: 'Reserved'
        }, {
          value: '127',
          description: 'Default (use threshold configured in device)'
        }]
      }
    }, {
      data: 'Room temperature threshold',
      shortcut: 'RTT',
      description: 'Overrides room temperature threshold for room temperature control mode',
      info: {},
      bitoffs: '41',
      bitsize: '7',
      enum: {
        item: [{
          min: '-63',
          max: '63',
          scale: {
            min: '-63',
            max: '63'
          },
          unit: '°C'
        }, {
          value: '-64',
          description: 'Default (use threshold configured in device)'
        }]
      }
    }]
  }, {
    title: 'Telegram Definition: ‘Ventilation Basic Status Message’',
    description: 'The ‘Ventilation Basic Status Message’ provides current sensor values\n                and  internal control status information. It is triggered once at\n                power-on and on particular value changes.<br/>\n                Additionally this message is available on request.\n                <br/>\n                <br/>Direction: Heat-recovery ventilation unit --> Gateway\n                <br/>\n                <img>graphics/D2-50-ZZ-No003.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: 0,
        bitsize: 3,
        value: 2
      }
    },
    datafield: [{
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '3',
      bitsize: '1'
    }, {
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '8',
      bitsize: '4'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Defines the message type',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Ventilation remote transmission request'
        }, {
          value: '1',
          description: 'Ventilation control'
        }, {
          value: '2',
          description: 'Ventilation basic status'
        }, {
          value: '3',
          description: 'Ventilation extended status'
        }, {
          value: '4',
          description: 'Reserved'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Operation Mode Status',
      shortcut: 'OMS',
      description: 'Shows current Operation Mode Status',
      info: {},
      bitoffs: '4',
      bitsize: '4',
      enum: {
        item: [{
          value: '0',
          description: 'Off'
        }, {
          value: '1',
          description: 'Level 1'
        }, {
          value: '2',
          description: 'Level 2'
        }, {
          value: '3',
          description: 'Level 3'
        }, {
          value: '4',
          description: 'Level 4'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }, {
          value: '8',
          description: 'Reserved'
        }, {
          value: '9',
          description: 'Reserved'
        }, {
          value: '10',
          description: 'Reserved'
        }, {
          value: '11',
          description: 'Automatic'
        }, {
          value: '12',
          description: 'Automatic on demand'
        }, {
          value: '13',
          description: 'Supply air only'
        }, {
          value: '14',
          description: 'Exhaust air only'
        }, {
          value: '15',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Safety Mode Status',
      shortcut: 'SMS',
      description: 'Indicates if device is running in fireplace safety mode',
      info: {},
      bitoffs: '12',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'fireplace safety mode disabled'
        }, {
          value: '1',
          description: 'fireplace safety mode enabled'
        }]
      }
    }, {
      data: 'Heat Exchanger Bypass Status',
      shortcut: 'HBS',
      description: 'Indicates heat exchanger bypass status',
      info: {},
      bitoffs: '13',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'bypass closed (heatrecovery active)'
        }, {
          value: '1',
          description: 'bypass opened (heatrecovery inactive)'
        }]
      }
    }, {
      data: 'Supply Air Flap Position',
      shortcut: 'SFP',
      description: 'Supply Air Flap Position',
      info: {},
      bitoffs: '14',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'supply air flap closed'
        }, {
          value: '1',
          description: 'supply air flap opened'
        }]
      }
    }, {
      data: 'Exhaust Air Flap Position',
      shortcut: 'EFP',
      description: 'Exhaust Air Flap Position',
      info: {},
      bitoffs: '15',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'exhaust air flap closed'
        }, {
          value: '1',
          description: 'exhaust air flap opened'
        }]
      }
    }, {
      data: 'Defrost Mode Status',
      shortcut: 'DMS',
      description: 'Indicates if device is running in defrost mode, i.e.\n                automatic defrosting of heat exchanger is active',
      info: {},
      bitoffs: '16',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'defrost mode inactive'
        }, {
          value: '1',
          description: 'defrost mode active'
        }]
      }
    }, {
      data: 'Cooling Protection Status',
      shortcut: 'CPS',
      description: 'Indicates if device is running in cooling protection',
      info: {},
      bitoffs: '17',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'cooling protection mode inactive'
        }, {
          value: '1',
          description: 'cooling protection mode active'
        }]
      }
    }, {
      data: 'Outdoor Air Heater Status',
      shortcut: 'OHS',
      description: 'Outdoor Air Heater Status',
      info: {},
      bitoffs: '18',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'inactive'
        }, {
          value: '1',
          description: 'active'
        }]
      }
    }, {
      data: 'Supply Air Heater Status',
      shortcut: 'SHS',
      description: 'Supply Air Heater Status',
      info: {},
      bitoffs: '19',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'inactive'
        }, {
          value: '1',
          description: 'active'
        }]
      }
    }, {
      data: 'Drain Heater Status',
      shortcut: 'DHS',
      description: 'Drain Heater Status',
      info: {},
      bitoffs: '20',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'inactive'
        }, {
          value: '1',
          description: 'active'
        }]
      }
    }, {
      data: 'Timer Operation Mode Status',
      shortcut: 'TOMS',
      description: 'Indicates timer operation mode status',
      info: {},
      bitoffs: '21',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'timer operation mode inactive'
        }, {
          value: '1',
          description: 'timer operation mode active'
        }]
      }
    }, {
      data: 'Filter Maintenance Status',
      shortcut: 'FMS',
      description: 'Filter Maintenance Status',
      info: {},
      bitoffs: '22',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Maintenance not required'
        }, {
          value: '1',
          description: 'Maintenance required'
        }]
      }
    }, {
      data: 'Weekly Timer Program Status',
      shortcut: 'WTPS',
      description: 'Indicates if weekly timer program is active\n                (i.e. if device is running according to configured program)',
      info: {},
      bitoffs: '23',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'weekly timer program disabled or not configured'
        }, {
          value: '1',
          description: 'weekly timer program active'
        }]
      }
    }, {
      data: 'Room Temperature Control Status',
      shortcut: 'RTCS',
      description: 'Indicates room temperature control status',
      info: {},
      bitoffs: '24',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'room temperature control inactive'
        }, {
          value: '1',
          description: 'room temperature control active'
        }]
      }
    }, {
      data: 'Air Quality Sensor 1',
      shortcut: 'AQS1',
      description: 'Current air quality sensor 1 measurement value',
      info: {},
      bitoffs: '25',
      bitsize: '7',
      enum: {
        item: [{
          min: '0',
          max: '100',
          description: '0...100 %'
        }, {
          min: '101',
          max: '126',
          description: 'Reserved'
        }, {
          value: '127',
          description: 'not available'
        }]
      }
    }, {
      data: 'Master/Slave Configuration Status',
      shortcut: 'MSS',
      description: 'Indicates whether device is configured as master or slave unit',
      info: {},
      bitoffs: '32',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Master'
        }, {
          value: '1',
          description: 'Slave'
        }]
      }
    }, {
      data: 'Air Quality Sensor 2',
      shortcut: 'AQS2',
      description: 'Current air quality sensor 2 measurement value',
      info: {},
      bitoffs: '33',
      bitsize: '7',
      enum: {
        item: [{
          min: '0',
          max: '100',
          description: '0...100 %'
        }, {
          min: '101',
          max: '126',
          description: 'Reserved'
        }, {
          value: '127',
          description: 'not available'
        }]
      }
    }, {
      data: 'Outdoor Air Temperature',
      shortcut: 'OUTT',
      description: 'Current outdoor air temperature',
      info: {},
      bitoffs: '40',
      bitsize: '7',
      range: {
        min: '0',
        max: '127'
      },
      scale: {
        min: '-64',
        max: '63'
      },
      unit: '°C'
    }, {
      data: 'Supply Air Temperature',
      shortcut: 'SPLYT',
      description: 'Current supply air temperature',
      info: {},
      bitoffs: '47',
      bitsize: '7',
      range: {
        min: '0',
        max: '127'
      },
      scale: {
        min: '-64',
        max: '63'
      },
      unit: '°C'
    }, {
      data: 'Indoor Air Temperature',
      shortcut: 'INT',
      description: 'Current indoor air temperature',
      info: {},
      bitoffs: '54',
      bitsize: '7',
      range: {
        min: '0',
        max: '127'
      },
      scale: {
        min: '-64',
        max: '63'
      },
      unit: '°C'
    }, {
      data: 'Exhaust Air Temperature',
      shortcut: 'EXHT',
      description: 'Current exhaust air temperature',
      info: {},
      bitoffs: '61',
      bitsize: '7',
      range: {
        min: '0',
        max: '127'
      },
      scale: {
        min: '-64',
        max: '63'
      },
      unit: '°C'
    }, {
      data: 'Supply Air Fan Air Flow Rate',
      shortcut: 'SPLYFF',
      description: 'Current supply air fan air flow rate setpoint',
      info: {},
      bitoffs: '68',
      bitsize: '10',
      range: {
        min: '0',
        max: '1023'
      },
      scale: {
        min: '0',
        max: '1023'
      },
      unit: 'm3/h'
    }, {
      data: 'Exhaust Air Fan Air Flow Rate',
      shortcut: 'EXHFF',
      description: 'Current exhaust air fan air flow rate setpoint',
      info: {},
      bitoffs: '78',
      bitsize: '10',
      range: {
        min: '0',
        max: '1023'
      },
      scale: {
        min: '0',
        max: '1023'
      },
      unit: 'm3/h'
    }, {
      data: 'Supply Fan Speed',
      shortcut: 'SPLYFS',
      description: 'Current supply air fan speed',
      info: {},
      bitoffs: '88',
      bitsize: '12',
      range: {
        min: '0',
        max: '4095'
      },
      scale: {
        min: '0',
        max: '4095'
      },
      unit: '1/min'
    }, {
      data: 'Exhaust Fan Speed',
      shortcut: 'EXHFS',
      description: 'Current exhaust air fan speed',
      info: {},
      bitoffs: '100',
      bitsize: '12',
      range: {
        min: '0',
        max: '4095'
      },
      scale: {
        min: '0',
        max: '4095'
      },
      unit: '1/min'
    }]
  }, {
    title: 'Telegram Definition: ‘Ventilation Extended Status Message’',
    description: 'The ‘Ventilation Extended Status Message’ provides additional\n                information, e.g. active failure information.\n                It is triggered once at power-on and on particular value changes.\n                <br/>Additionally this message is available on request.\n                <br/>\n                <br/>Direction: Heat-recovery ventilation unit --> Gateway\n                <br/>\n                <img>graphics/D2-50-ZZ-No004.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: 0,
        bitsize: 3,
        value: 3
      }
    },
    datafield: [{
      reserved: {},
      data: {},
      shortcut: {},
      description: {},
      bitoffs: '3',
      bitsize: '1'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Defines the message type',
      info: {},
      bitoffs: '0',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Ventilation remote transmission request'
        }, {
          value: '1',
          description: 'Ventilation control'
        }, {
          value: '2',
          description: 'Ventilation basic status'
        }, {
          value: '3',
          description: 'Ventilation extended status'
        }, {
          value: '4',
          description: 'Reserved'
        }, {
          value: '5',
          description: 'Reserved'
        }, {
          value: '6',
          description: 'Reserved'
        }, {
          value: '7',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Software Version Info',
      shortcut: 'SVI',
      description: 'Shows Software Version Information',
      info: {},
      bitoffs: '4',
      bitsize: '12',
      range: {
        min: '0',
        max: '4095'
      },
      scale: {
        min: '0',
        max: '4095'
      },
      unit: '-'
    }, {
      data: 'Operation Hours Counter',
      shortcut: 'OHC',
      description: 'Indicates device operation hours',
      info: {},
      bitoffs: '16',
      bitsize: '16',
      range: {
        min: '0',
        max: '196605'
      },
      scale: {
        min: '0',
        max: '589815'
      },
      unit: 'h'
    }, {
      data: 'Digital Input 0...15 Status',
      shortcut: 'DIS',
      description: 'Indicates the current state of digital inputs 0...15 of the device\n                <br/><br/>\n                input assignment depends on device variant and configuration',
      info: {},
      bitoffs: '32',
      bitsize: '16',
      enum: {
        item: [{
          value: '0x0001',
          description: 'input no. 00 active'
        }, {
          value: '0x0002',
          description: 'input no. 01 active'
        }, {
          value: '0x0004',
          description: 'input no. 02 active'
        }, {
          value: '0x0008',
          description: 'input no. 03 active'
        }, {
          value: '0x0010',
          description: 'input no. 04 active'
        }, {
          value: '0x0020',
          description: 'input no. 05 active'
        }, {
          value: '0x0040',
          description: 'input no. 06 active'
        }, {
          value: '0x0080',
          description: 'input no. 07 active'
        }, {
          value: '0x0100',
          description: 'input no. 08 active'
        }, {
          value: '0x0200',
          description: 'input no. 09 active'
        }, {
          value: '0x0400',
          description: 'input no. 10 active'
        }, {
          value: '0x0800',
          description: 'input no. 11 active'
        }, {
          value: '0x1000',
          description: 'input no. 12 active'
        }, {
          value: '0x2000',
          description: 'input no. 13 active'
        }, {
          value: '0x4000',
          description: 'input no. 14 active'
        }, {
          value: '0x8000',
          description: 'input no. 15 active'
        }]
      }
    }, {
      data: 'Digital Output 0...15 Status',
      shortcut: 'DOS',
      description: 'Indicates the current state of digital outputs 0...15 of the device\n                  <br/>\n                  <br/>output assignment depends on device variant and configuration',
      info: {},
      bitoffs: '48',
      bitsize: '16',
      enum: {
        item: [{
          value: '0x0001',
          description: 'output no. 00 active'
        }, {
          value: '0x0002',
          description: 'output no. 01 active'
        }, {
          value: '0x0004',
          description: 'output no. 02 active'
        }, {
          value: '0x0008',
          description: 'output no. 03 active'
        }, {
          value: '0x0010',
          description: 'output no. 04 active'
        }, {
          value: '0x0020',
          description: 'output no. 05 active'
        }, {
          value: '0x0040',
          description: 'output no. 06 active'
        }, {
          value: '0x0080',
          description: 'output no. 07 active'
        }, {
          value: '0x0100',
          description: 'output no. 08 active'
        }, {
          value: '0x0200',
          description: 'output no. 09 active'
        }, {
          value: '0x0400',
          description: 'output no. 10 active'
        }, {
          value: '0x0800',
          description: 'output no. 11 active'
        }, {
          value: '0x1000',
          description: 'output no. 12 active'
        }, {
          value: '0x2000',
          description: 'output no. 13 active'
        }, {
          value: '0x4000',
          description: 'output no. 14 active'
        }, {
          value: '0x8000',
          description: 'output no. 15 active'
        }]
      }
    }, {
      data: 'Info Message 0...15 Status',
      shortcut: 'IMS',
      description: 'Indicates the current state of info message no. 0...15\n                generated by the device',
      info: {},
      bitoffs: '64',
      bitsize: '16',
      enum: {
        item: [{
          value: '0x0001',
          description: 'info no. 00 active'
        }, {
          value: '0x0002',
          description: 'info no. 01 active'
        }, {
          value: '0x0004',
          description: 'info no. 02 active'
        }, {
          value: '0x0008',
          description: 'info no. 03 active'
        }, {
          value: '0x0010',
          description: 'info no. 04 active'
        }, {
          value: '0x0020',
          description: 'info no. 05 active'
        }, {
          value: '0x0040',
          description: 'info no. 06 active'
        }, {
          value: '0x0080',
          description: 'info no. 07 active'
        }, {
          value: '0x0100',
          description: 'info no. 08 active'
        }, {
          value: '0x0200',
          description: 'info no. 09 active'
        }, {
          value: '0x0400',
          description: 'info no. 10 active'
        }, {
          value: '0x0800',
          description: 'info no. 11 active'
        }, {
          value: '0x1000',
          description: 'info no. 12 active'
        }, {
          value: '0x2000',
          description: 'info no. 13 active'
        }, {
          value: '0x4000',
          description: 'info no. 14 active'
        }, {
          value: '0x8000',
          description: 'info no. 15 active'
        }]
      }
    }, {
      data: 'Fault 0...31 Status',
      shortcut: 'FS',
      description: 'Indicates the current state of fault no. 0...31 generated\n                by the device',
      info: {},
      bitoffs: '80',
      bitsize: '32',
      enum: {
        item: [{
          value: '0x00000001',
          description: 'fault no. 00 active'
        }, {
          value: '0x00000002',
          description: 'fault no. 01 active'
        }, {
          value: '0x00000004',
          description: 'fault no. 02 active'
        }, {
          value: '0x00000008',
          description: 'fault no. 03 active'
        }, {
          value: '0x00000010',
          description: 'fault no. 04 active'
        }, {
          value: '0x00000020',
          description: 'fault no. 05 active'
        }, {
          value: '0x00000040',
          description: 'fault no. 06 active'
        }, {
          value: '0x00000080',
          description: 'fault no. 07 active'
        }, {
          value: '0x00000100',
          description: 'fault no. 08 active'
        }, {
          value: '0x00000200',
          description: 'fault no. 09 active'
        }, {
          value: '0x00000400',
          description: 'fault no. 10 active'
        }, {
          value: '0x00000800',
          description: 'fault no. 11 active'
        }, {
          value: '0x00001000',
          description: 'fault no. 12 active'
        }, {
          value: '0x00002000',
          description: 'fault no. 13 active'
        }, {
          value: '0x00004000',
          description: 'fault no. 14 active'
        }, {
          value: '0x00008000',
          description: 'fault no. 15 active'
        }, {
          value: '0x00010000',
          description: 'fault no. 16 active'
        }, {
          value: '0x00020000',
          description: 'fault no. 17 active'
        }, {
          value: '0x00040000',
          description: 'fault no. 18 active'
        }, {
          value: '0x00080000',
          description: 'fault no. 19 active'
        }, {
          value: '0x00100000',
          description: 'fault no. 20 active'
        }, {
          value: '0x00200000',
          description: 'fault no. 21 active'
        }, {
          value: '0x00400000',
          description: 'fault no. 22 active'
        }, {
          value: '0x00800000',
          description: 'fault no. 23 active'
        }, {
          value: '0x01000000',
          description: 'fault no. 24 active'
        }, {
          value: '0x02000000',
          description: 'fault no. 25 active'
        }, {
          value: '0x04000000',
          description: 'fault no. 26 active'
        }, {
          value: '0x08000000',
          description: 'fault no. 27 active'
        }, {
          value: '0x10000000',
          description: 'fault no. 28 active'
        }, {
          value: '0x20000000',
          description: 'fault no. 29 active'
        }, {
          value: '0x40000000',
          description: 'fault no. 30 active'
        }, {
          value: '0x80000000',
          description: 'fault no. 31 active'
        }]
      }
    }]
  }],
  originalIndex: 211,
  eep: 'd2-50-00',
  rorg_title: 'VLD Telegram',
  rorg_number: '0xD2',
  func_title: 'Heat Recovery Ventilation',
  func_number: '0x50',
  submitter: [
    'Glen Dimplex'
  ]
}
