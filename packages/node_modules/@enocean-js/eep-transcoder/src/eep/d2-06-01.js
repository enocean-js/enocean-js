export const d20601 = {
  number: '0x01',
  title: 'Alarm, Position Sensor, Vacation Mode, Optional Sensors',
  status: 'released',
  description: '\n            <br/>\n            <br/>\n            <span style="border-bottom:2px groove #000000;">Data exchange</span>\n            <br/>Direction: bidirectional\n            <br/>Addressing: broadcast\n            <br/>Communication trigger: event- & time-triggered\n            <br/>Communication interval: Time-Triggered: Default is 20 Minutes; Event-Triggered\n            <br/>Trigger event: Alarm, Handle Movement, Window Movement, Button Presses\n            <br/>Tx delay: 500 ms\n            <br/>Rx timeout: 100 ms\n            <br/>\n            <br/>\n            <span style="border-bottom:2px groove #000000;">Teach-in</span>\n            <br/>Teach-in method: Universal teach-in (UTE)\n            <br/>\n            <br/>\n            <span style="border-bottom:2px groove #000000;">Security</span>\n            <br/>Encryption supported: no\n            <br/>Security level format: -\n            <br/>\n            <br/><span style="border-bottom:2px groove #000000;">Product Description</span>\n            <br/>\n            <br/>The device represented by this EEP is a “Multi-Sensor Window Handle\n            with Alarm Functionality”. It is powered by two 1.5V AA batteries.\n            <br/>\n            <br/>It can be equipped with the following set of features:\n            <br/>- Alarm Sensor\n            <br/>- Handle Position Sensor\n            <br/>- Window Position Sensor\n            <br/>- Two General Purpose Buttons\n            <br/>- Temperature Sensor\n            <br/>- Humidity Sensor\n            <br/>- Illumination Sensor\n            <br/>- Motion Sensor\n            <br/>- Vacation Mode\n            <br/>- Battery Level Measurement\n            <br/>- Buzzer\n            <br/>- Two LEDs\n            <br/>\n            <br/>\n            Details to all features are listed below.\n            <br/>\n            <br/>\n            For pairing the bidirectional UTE method is used.\n            <br/>\n            <br/>\n            The device transmits the actual sensor values periodically (dDefault:\n            20 minutes) or on an event like “Handle Movement” or “Alarm”.\n            <br/>\n            <br/>\n            After each transmission of a packet the radio part of the handle is\n            in receive mode for a certain amount of time (default: 500 ms) and\n            accepts then messages from a paired Controller/Gateway/… .\n            For normal operation it is not necessary to send data to the handle.\n            It is just needed to make some configurations, get log data or\n            control some parts of the handle.\n            <br/>\n            <br/>\n            Because it is possible to have all possible permutations of the\n            handle features out in the market, the EEP approach presented in\n            this document is used. The variety of handle-products with different\n            equipped features does not fit well to the EEP family approach\n            preferred in the EnOcean world.\n            <br/>\n            <br/><span style="border-bottom:2px groove #000000;">Feature Description</span>\n            <br/>\n            The handle may have all or a subset of the features described here.\n            If a feature is not available (e.g. the sensor is not equipped),\n            then this will be marked in the radio telegram (see detailed tables below).\n            <br/>\n            <br/>\n            <b>Burglary Alarm Sensor</b><br/>\n            The handle can detect if someone tries to commit burglary on the\n            window the handle is mounted on. The Burglary Alarm Sensor is\n            automatically enabled/disabled each time the window is closed/opened.\n            If an alarm is detected, a radio packet is send with “Burglary Alarm\n            Triggered” flag set and (if handle is equipped with a buzzer) a local\n            alarm sound is generated by the internal buzzer for a certain amount\n            of time (180 s). During the alarm time a repeated “Burglary Alarm On”\n            is send every 15 seconds + Random Offset (0…7 seconds).\n            <br/>\n            <br/>\n            <b>Protection Plus Alarm Sensor</b><br/>\n            Protection Plus is a feature, which generates an alarm every time the\n            handle is moved. Due to security reasons, the detailed documentation\n            about this feature is available from SODA GmbH only under NDA.\n            <br/>\n            <br/>\n            <b>Handle Position</b><br/>\n            The position of the handle is detected and transmitted on every change.\n            <br/>\n            <br/>\n            <b>Window Position</b><br/>\n            It is possible to detect if the window is tilted or not tilted.\n            A packet is send on every change.\n            <br/>\n            <br/>\n            <b>General Purpose Buttons</b><br/>\n            There are two buttons on the handle which can be used as general\n            purpose buttons to control blinds/shutters, lights, etc. <br/>\n            A packet is send when a button is pressed and again when it is released.\n            <br/>\n            <br/>\n            <b>Temperature Sensor, Humidity Sensor, Brightness Sensor</b><br/>\n            The environmental sensors are updated periodically (adjustable,\n            default: 20 minutes) and after this a packet with the updated values\n            is send.\n            <br/>\n            <br/>\n            <b>Motion Sensor</b><br/>\n            The handle can be equipped with a PIR Motion sensor which triggers a\n            packet every time a motion change is detected.\n            <br/>\n            <br/>\n            <b>Vacation Mode</b><br/>\n            If the Vacation Mode is enabled, the red LEDs on the sides of the\n            handle light up every few seconds. This signalizes that the alarm\n            monitoring is active and should be daunting for potential burglars.<br/>\n            The Vacation Mode can be enabled/disabled by a radio command or by a\n            button press locally on the handle. If it is activated locally, a\n            radio packet is sent out to signalize the change to a paired gateway.\n            <br/>\n            <br/>\n            <b>Battery Monitor</b><br/>\n            The handle monitors its battery level and transmits the state of the\n            battery.\n            <br/>\n            <br/>\n            <b>Battery Low Click</b><br/>\n            If enabled, the handle also makes some click noises when the battery\n            level is critical.\n            <br/>\n            <br/>\n            <b>Handle Closed Click</b><br/>\n            The handle generates a click sound every time the handle is closed\n            (put in downward position). This signalizes the activation of the\n            alarm monitoring and gives an acoustic feedback to the user. This\n            click sound can be enabled or disabled by a radio command.\n            <br/>\n            <br/><span style="border-bottom:2px groove #000000;">Communication Example</span>\n            <br/><img>graphics/D2-06-01_01.png</img>\n            <br/>\n            <br/><span style="border-bottom:2px groove #000000;">Telegram Definition</span>\n            <br/>\n            <br/>The device uses different types of messages for bidirectional\n            communication. The MSB of the VLD payload defines the type of message\n            as shown below in the first table. The different message types are\n            listed in the second table. A detailed description of each message\n            type is then followed in separate tables.\n            <br/>\n            <br/>\n            <img>graphics/D2-06-01_02.png</img>',
  case: [{
    title: 'Message Type 0x00: Sensor Values',
    description: '<img>graphics/D2-06-01_MT00.png</img>\n              <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x00'
      }
    },
    datafield: [{
      reserved: {},
      bitoffs: '77',
      bitsize: '3'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x00',
          description: 'Message Type Sensor Values'
        }
      }
    }, {
      data: 'Burglary Alarm',
      shortcut: 'BAL',
      description: 'Burglary Alarm Trigger Signal',
      info: {},
      bitoffs: '8',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'Burglary Alarm Not Triggered'
        }, {
          value: '0x1',
          description: 'Burglary Alarm Triggered'
        }, {
          min: '0x2',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid',
          info: {}
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Protection Plus Alarm',
      shortcut: 'PPAL',
      description: 'Protection Plus Alarm Trigger Signal',
      info: {},
      bitoffs: '12',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'Protection Plus Alarm Not Triggered'
        }, {
          value: '0x1',
          description: 'Protection Plus Alarm Triggered'
        }, {
          min: '0x2',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid'
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Handle Position',
      shortcut: 'HP',
      description: 'Position of Handle',
      info: {},
      bitoffs: '16',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'Handle Position Undefined'
        }, {
          value: '0x1',
          description: 'Handle Up'
        }, {
          value: '0x2',
          description: 'Handle Down'
        }, {
          value: '0x3',
          description: 'Handle Left'
        }, {
          value: '0x4',
          description: 'Handle Right'
        }, {
          min: '0x5',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid',
          info: {}
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Window State',
      shortcut: 'WS',
      description: 'State of Window',
      info: {},
      bitoffs: '20',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'Window State Undefined'
        }, {
          value: '0x1',
          description: 'Window Not Tilted'
        }, {
          value: '0x2',
          description: 'Window Tilted'
        }, {
          min: '0x3',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid',
          info: {}
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Button Right',
      shortcut: 'BR',
      description: 'Button Right Activities',
      info: {},
      bitoffs: '24',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Button Pressed'
        }, {
          value: '0x2',
          description: 'Button Released'
        }, {
          min: '0x3',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid'
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Button Left',
      shortcut: 'BL',
      description: 'Button Left Activities',
      info: {},
      bitoffs: '28',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Button Pressed'
        }, {
          value: '0x2',
          description: 'Button Released'
        }, {
          min: '0x3',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid'
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Motion',
      shortcut: 'M',
      description: 'Motion sensing like typical PIR sensors',
      info: {},
      bitoffs: '32',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'Motion Not Triggered'
        }, {
          value: '0x1',
          description: 'Motion Triggered'
        }, {
          min: '0x2',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid'
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Vacation Mode',
      shortcut: 'V',
      description: 'If Vacation Mode is active, the LEDs of<br/>\n                the handle light up every few seconds.<br/><br/>\n                Vacation Mode can be activated remotely<br/>\n                by a radio command or locally by a<br/>\n                button press at the handle',
      info: {},
      bitoffs: '36',
      bitsize: '4',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Vacation Mode Locally Switched On'
        }, {
          value: '0x2',
          description: 'Vacation Mode Locally Switched Off'
        }, {
          min: '0x3',
          max: '0xD',
          description: 'Reserved'
        }, {
          value: '0xE',
          description: 'Supported + Invalid'
        }, {
          value: '0xF',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Temperature',
      shortcut: 'T',
      description: 'Measurement of Temperature in linear<br/>\n                0.32 °C steps',
      info: {},
      bitoffs: '40',
      bitsize: '8',
      enum: {
        item: [{
          min: '0',
          max: '250',
          scale: {
            min: '-20',
            max: '+60'
          },
          unit: '°C'
        }, {
          min: '251',
          max: '253',
          description: 'Reserved'
        }, {
          value: '254',
          description: 'Supported + Invalid'
        }, {
          value: '255',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Humidity',
      shortcut: 'H',
      description: 'Measurement of Relative Humidity in<br/>\n                linear 0.5 % steps',
      info: {},
      bitoffs: '48',
      bitsize: '8',
      enum: {
        item: [{
          min: '0',
          max: '200',
          scale: {
            min: '0',
            max: '100'
          },
          unit: '%'
        }, {
          min: '201',
          max: '253',
          description: 'Reserved'
        }, {
          value: '254',
          description: 'Supported + Invalid'
        }, {
          value: '255',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Illumination',
      shortcut: 'I',
      description: 'Illumination linear in 1 lx steps',
      info: {},
      bitoffs: '56',
      bitsize: '16',
      enum: {
        item: [{
          min: '0',
          max: '60000',
          scale: {
            min: '0',
            max: '60000'
          },
          unit: 'lx'
        }, {
          value: '60001',
          description: 'Over Range'
        }, {
          min: '60002',
          max: '65533',
          description: 'Reserved'
        }, {
          value: '65534',
          description: 'Supported + Invalid'
        }, {
          value: '65535',
          description: 'Not Supported'
        }]
      }
    }, {
      data: 'Battery State',
      shortcut: 'BS',
      description: 'State of the battery charge<br/>\n                in 5 % steps',
      info: {},
      bitoffs: '72',
      bitsize: '5',
      enum: {
        item: [{
          min: '0',
          max: '20',
          scale: {
            min: '0',
            max: '100'
          },
          unit: '%'
        }, {
          min: '21',
          max: '31',
          description: 'Reserved'
        }]
      }
    }]
  }, {
    title: 'Message Type 0x10: Configuration Report',
    description: '<img>graphics/D2-06-01_MT10.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x10'
      }
    },
    datafield: [{
      reserved: {},
      bitoffs: '11',
      bitsize: '5'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x10',
          description: 'Message Type Configuration Report'
        }
      }
    }, {
      data: 'Vacation Mode',
      shortcut: 'VMR',
      description: 'Status of Vacation Mode',
      info: {},
      bitoffs: '8',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'Vacation Mode is Off'
        }, {
          value: '0x1',
          description: 'Vacation Mode is On'
        }]
      }
    }, {
      data: 'Handle Closed Click',
      shortcut: 'HCCR',
      description: 'Status of Handle Closed Click Feature',
      info: {},
      bitoffs: '9',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'Handle Closed Click Feature is Disabled'
        }, {
          value: '0x1',
          description: 'Handle Closed Click Feature is Enabled'
        }]
      }
    }, {
      data: 'Battery Low Click',
      shortcut: 'BLCR',
      description: 'Status of Battery Low Click Feature',
      info: {},
      bitoffs: '10',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'Battery Low Click Feature is Disabled'
        }, {
          value: '0x1',
          description: 'Battery Low Click Feature is Enabled'
        }]
      }
    }, {
      data: 'Sensor Update Interval',
      shortcut: 'SUIR',
      description: 'Interval in seconds between the update<br/>\n                of the environmental sensors.<br/><br/>\n                After each update period a Sensor Value<br/>\n                packet (Message Type 0x00, see above)<br/>\n                is transmitted',
      info: {},
      bitoffs: '16',
      bitsize: '16',
      enum: {
        item: [{
          min: '0x0000',
          max: '0x0004',
          description: 'Reserved'
        }, {
          min: '0x0005',
          max: '0xFFFF',
          scale: {
            min: '5',
            max: '65535'
          },
          unit: 's'
        }]
      }
    }, {
      data: 'Vacation Blink Interval',
      shortcut: 'VBIR',
      description: 'Interval in seconds between the LED blinks<br/>\n                when Vacation Mode is activated',
      info: {},
      bitoffs: '32',
      bitsize: '8',
      enum: {
        item: [{
          min: '0x00',
          max: '0x02',
          description: 'Reserved'
        }, {
          min: '0x03',
          max: '0xFF',
          scale: {
            min: '3',
            max: '255'
          },
          unit: 's'
        }]
      }
    }]
  }, {
    title: 'Message Type 0x20: Log Data 01',
    description: '<img>graphics/D2-06-01_MT20.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x20'
      }
    },
    datafield: [{
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x20',
          description: 'Message Type Log Data 01'
        }
      }
    }, {
      data: 'Power Ons',
      shortcut: 'PON',
      description: 'Number of Power Ons',
      info: {},
      bitoffs: '8',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }, {
      data: 'Alarms',
      shortcut: 'ALL',
      description: 'Number of Alarms',
      info: {},
      bitoffs: '40',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }]
  }, {
    title: 'Message Type 0x21: Log Data 02',
    description: '<img>graphics/D2-06-01_MT21.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x21'
      }
    },
    datafield: [{
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x21',
          description: 'Message Type Log Data 02'
        }
      }
    }, {
      data: 'Handle Movements Closed',
      shortcut: 'HMC',
      description: 'Number of Handle Movements Closed',
      info: {},
      bitoffs: '8',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }, {
      data: 'Handle Movements Opened',
      shortcut: 'HMO',
      description: 'Number of Handle Movements Opened',
      info: {},
      bitoffs: '40',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }, {
      data: 'Handle Movements Tilted',
      shortcut: 'HMT',
      description: 'Number of Handle Movements Tilted',
      info: {},
      bitoffs: '72',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }]
  }, {
    title: 'Message Type 0x22: Log Data 03',
    description: '<img>graphics/D2-06-01_MT22.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x22'
      }
    },
    datafield: [{
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x22',
          description: 'Message Type Log Data 03'
        }
      }
    }, {
      data: 'Window Tilts',
      shortcut: 'WT',
      description: 'Number of Window Tilts',
      info: {},
      bitoffs: '8',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }]
  }, {
    title: 'Message Type 0x23: Log Data 04',
    description: '<img>graphics/D2-06-01_MT23.png</img>\n                <br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x23'
      }
    },
    datafield: [{
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x23',
          description: 'Message Type Log Data 04'
        }
      }
    }, {
      data: 'Button Right Presses',
      shortcut: 'BRP',
      description: 'Number of Button Right Presses',
      info: {},
      bitoffs: '8',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }, {
      data: 'Button Left Presses',
      shortcut: 'BLP',
      description: 'Number of Button Left Presses',
      info: {},
      bitoffs: '40',
      bitsize: '32',
      enum: {
        item: {
          min: '0x00000000',
          max: '0xFFFFFFFF',
          description: {}
        }
      }
    }]
  }, {
    title: 'Message Type 0x80: Control and Settings',
    description: '<img>graphics/D2-06-01_MT80.png</img>\n                <b>Notes:</b><br/>\n                The following settings are stored non volatile inside the handle\n                and only need to be send on a change request:<br/>\n                - Handle Closed Click Feature<br/>\n                - Battery Low Click Feature<br/>\n                - Sensor Update Interval<br/>\n                - Vacation Blink Interval<br/>\n                <br/>\n                It is possible to trigger several of the actions in one message;\n                e.g. if DB3.7 and DB3.6 both are set, the handle will transmit\n                the messages with the message types: 0x10, 0x20, 0x21, 0x22 and 0x23\n                <br/><br/>',
    condition: {
      datafield: {
        bitoffs: '0',
        bitsize: '8',
        value: '0x80'
      }
    },
    datafield: [{
      reserved: {},
      bitoffs: '15',
      bitsize: '1'
    }, {
      data: 'Message Type',
      shortcut: 'MT',
      description: 'Descriptor of this message',
      info: {},
      bitoffs: '0',
      bitsize: '8',
      enum: {
        item: {
          value: '0x80',
          description: 'Message Type Control and Settings'
        }
      }
    }, {
      data: 'Get Configuration Settings',
      shortcut: 'GCS',
      description: 'Start Transmission of the Configuration<br/>\n                Settings (Message Type 0x10, see above)',
      info: {},
      bitoffs: '8',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Start Transmission'
        }]
      }
    }, {
      data: 'Get Log Data',
      shortcut: 'GLD',
      description: 'Start Transmission of the Log Data Packets<br/>\n                (Message Type 0x2x, see above)',
      info: {},
      bitoffs: '9',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Start Transmission'
        }]
      }
    }, {
      data: 'Vacation Mode',
      shortcut: 'VMS',
      description: 'Set Vacation Mode',
      info: {},
      bitoffs: '10',
      bitsize: '1',
      enum: {
        item: [{
          value: '0x0',
          description: 'Switch Vacation Mode Off'
        }, {
          value: '0x1',
          description: 'Switch Vacation Mode On'
        }]
      }
    }, {
      data: 'Handle Closed Click',
      shortcut: 'HCCS',
      description: 'Set Handle Closed Click Feature',
      info: {},
      bitoffs: '11',
      bitsize: '2',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Disable Handle Closed Click Feature'
        }, {
          value: '0x2',
          description: 'Enable Handle Closed Click Feature'
        }, {
          value: '0x3',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Battery Low Click',
      shortcut: 'BLCS',
      description: 'Set Battery Low Click Feature',
      info: {},
      bitoffs: '13',
      bitsize: '2',
      enum: {
        item: [{
          value: '0x0',
          description: 'No Change'
        }, {
          value: '0x1',
          description: 'Disable Battery Low Click Feature'
        }, {
          value: '0x2',
          description: 'Enable Battery Low Click Feature'
        }, {
          value: '0x3',
          description: 'Reserved'
        }]
      }
    }, {
      data: 'Sensor Update Interval',
      shortcut: 'SUIS',
      description: 'Set Sensor Update Interval',
      info: {},
      bitoffs: '16',
      bitsize: '16',
      enum: {
        item: [{
          value: '0x0000',
          description: 'No Change'
        }, {
          min: '0x0001',
          max: '0x0004',
          description: 'Reserved'
        }, {
          min: '0x0005',
          max: '0xFFFF',
          scale: {
            min: '5',
            max: '65535'
          },
          unit: 's'
        }]
      }
    }, {
      data: 'Vacation Blink Interval',
      shortcut: 'VBIS',
      description: 'Set Vacation Blink Interval',
      info: {},
      bitoffs: '32',
      bitsize: '8',
      enum: {
        item: [{
          value: '0x00',
          description: 'No Change'
        }, {
          min: '0x01',
          max: '0x02',
          description: 'Reserved'
        }, {
          min: '0x03',
          max: '0xFF',
          scale: {
            min: '3',
            max: '255'
          },
          unit: 's'
        }]
      }
    }]
  }],
  originalIndex: 182,
  eep: 'd2-06-01',
  rorg_title: 'VLD Telegram',
  rorg_number: '0xD2',
  func_title: 'Multisensor Window Handle',
  func_number: '0x06',
  submitter: [
    'SODA GmbH'
  ]
}
