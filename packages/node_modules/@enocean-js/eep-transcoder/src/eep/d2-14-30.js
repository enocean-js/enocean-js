export const d21430 = {
  number: '0x30',
  title: 'Sensor for Smoke, Air quality, Hygrothermal comfort, Temperature and Humidity',
  status: 'released',
  description: 'For the parameter ES (energy storage) applies: manufacturer / device which would like to indicate a percentage value it is recommended to hanlde this in the user manual of the device, respectively an application note.',
  case: [{
    datafield: [{
      data: 'Smoke Alarm status',
      shortcut: 'SMS',
      description: 'Smoke Alarm status',
      info: {},
      bitoffs: '0',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Smoke Alarm non-activated'
        }, {
          value: '1',
          description: 'Smoke Alarm activated'
        }]
      }
    }, {
      data: 'Sensor fault mode status',
      shortcut: 'SFMS',
      description: 'Sensor fault mode status',
      info: {},
      bitoffs: '1',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Sensor fault mode non-activated'
        }, {
          value: '1',
          description: 'Sensor fault mode activated'
        }]
      }
    }, {
      data: 'Sensor Alarm Condition analysis: Maintenance',
      shortcut: 'SACM',
      description: 'Sensor Alarm Condition analysis: Maintenance',
      info: {},
      bitoffs: '2',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Maintenance OK'
        }, {
          value: '1',
          description: 'Maintenance not done'
        }]
      }
    }, {
      data: 'Sensor Alarm Condition analysis: Humidity',
      shortcut: 'SACH',
      description: 'Sensor Alarm Condition analysis: Humidity',
      info: {},
      bitoffs: '3',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Humidity range OK'
        }, {
          value: '1',
          description: 'Humidity range NOK'
        }]
      }
    }, {
      data: 'Sensor Alarm Condition analysis: Temperature',
      shortcut: 'SACT',
      description: 'Sensor Alarm Condition analysis: Temperature',
      info: {},
      bitoffs: '4',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Temperature range OK'
        }, {
          value: '1',
          description: 'Temperature range NOK'
        }]
      }
    }, {
      data: 'Time since last maintenance',
      shortcut: 'TLM',
      description: 'Time since last maintenance',
      info: {},
      bitoffs: '5',
      bitsize: '8',
      enum: {
        item: [{
          min: '0',
          max: '250',
          description: 'Week'
        }, {
          min: '251',
          max: '254',
          description: 'reserved'
        }, {
          value: '255',
          description: 'Error'
        }]
      }
    }, {
      data: 'Energy Storage',
      shortcut: 'ES',
      description: 'Energy Storage',
      info: {},
      bitoffs: '13',
      bitsize: '2',
      enum: {
        item: [{
          value: '0',
          description: 'High'
        }, {
          value: '1',
          description: 'Medium'
        }, {
          value: '2',
          description: 'Low'
        }, {
          value: '3',
          description: 'Critical'
        }]
      }
    }, {
      data: 'Remaining Product Life Time',
      shortcut: 'RPLT',
      description: 'Countdown time until product EOL',
      info: {},
      bitoffs: '15',
      bitsize: '8',
      enum: {
        item: [{
          min: '0',
          max: '120',
          description: 'Month'
        }, {
          min: '121',
          max: '254',
          description: 'reserved'
        }, {
          value: '255',
          description: 'Error'
        }]
      }
    }, {
      data: 'Temperature',
      shortcut: 'TMP',
      description: 'Temperature linear',
      info: {},
      bitoffs: '15',
      bitsize: '8',
      range: {
        min: '0',
        max: '250'
      },
      scale: {
        min: '0',
        max: '50'
      },
      unit: 'Â°C'
    }, {
      data: 'Humidity',
      shortcut: 'HUM',
      description: 'Humidity',
      info: {},
      bitoffs: '23',
      bitsize: '8',
      range: {
        min: '0',
        max: '200'
      },
      scale: {
        min: '0',
        max: '100'
      },
      unit: '%rel'
    }, {
      data: 'Hygrothermal Comfort Index',
      shortcut: 'HCI',
      description: 'Comfort Index based on temperature and humidity',
      info: {},
      bitoffs: '39',
      bitsize: '2',
      enum: {
        item: [{
          value: '0',
          description: 'Good'
        }, {
          value: '1',
          description: 'Medium'
        }, {
          value: '2',
          description: 'Bad'
        }, {
          value: '3',
          description: 'Error'
        }]
      }
    }, {
      data: 'Indoor Air Quality Analysis',
      shortcut: 'IAQTH',
      description: 'Indoor Air Quality Analysis based on temperature and humidity',
      info: {},
      bitoffs: '41',
      bitsize: '3',
      enum: {
        item: [{
          value: '0',
          description: 'Optimal air range'
        }, {
          value: '1',
          description: 'Dry air range'
        }, {
          value: '2',
          description: 'High humidity range'
        }, {
          value: '3',
          description: 'High temperature and humidity range'
        }, {
          value: '4',
          description: 'Temperature or humidity out of range'
        }, {
          min: '5',
          max: '6',
          description: 'reserved'
        }, {
          value: '7',
          description: 'Error'
        }]
      }
    }, {
      bitoffs: '44',
      bitsize: '4',
      reserved: 'reserved'
    }]
  }],
  originalIndex: 210,
  eep: 'd2-14-30',
  rorg_title: 'VLD Telegram',
  rorg_number: '0xD2',
  func_title: 'Multi Function Sensors',
  func_number: '0x14',
  submitter: [
    'EnOcean GmbH'
  ]
}
