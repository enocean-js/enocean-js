export const a52001 = {
  number: '0x01',
  title: 'Battery Powered Actuator',
  status: 'released',
  description: '<br/><br/>\n          <br/>\n          DIRECTION-1 = Transmit mode: Message from the actuator to the controller\n          <br/>\n          DIRECTION-2 = Receive mode: Commands from the controller to the actuator;\n          max. reponse time 1 sec.',
  case: [{
    direction: '1',
    condition: {
      direction: '1'
    },
    datafield: [{
      reserved: {},
      bitoffs: '24',
      bitsize: '4'
    }, {
      reserved: {},
      bitoffs: '29',
      bitsize: '3'
    }, {
      data: 'LRN Bit',
      shortcut: 'LRNB',
      description: 'LRN Bit',
      bitoffs: '28',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Teach-in telegram'
        }, {
          value: '1',
          description: 'Data telegram'
        }]
      }
    }, {
      data: 'Current Value',
      shortcut: 'CV',
      description: 'Current value',
      info: 'actual value 0...100 %, linear n=0...100',
      bitoffs: '0',
      bitsize: '8',
      range: {
        min: '0',
        max: '100'
      },
      scale: {
        min: '0',
        max: '100'
      },
      unit: '%'
    }, {
      data: 'Service On',
      shortcut: 'SO',
      description: 'Service On',
      info: {},
      bitoffs: '8',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'on'
        }
      }
    }, {
      data: 'Energy input enabled',
      shortcut: 'ENIE',
      description: 'Energy input enabled',
      info: {},
      bitoffs: '9',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Energy Storage',
      shortcut: 'ES',
      description: 'Energy storage sufficiently charged',
      info: {},
      bitoffs: '10',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Battery capacity',
      shortcut: 'BCAP',
      description: 'Battery capacity; change battery next days',
      info: {},
      bitoffs: '11',
      bitsize: '1',
      enum: {
        item: {
          value: '0',
          description: 'true'
        }
      }
    }, {
      data: 'Contact, cover open',
      shortcut: 'CCO',
      description: 'Contact, cover open',
      info: {},
      bitoffs: '12',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Failure temperature sensor, out off range',
      shortcut: 'FTS',
      description: 'Failure Temperature sensor, out off range',
      info: {},
      bitoffs: '13',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Detection, window open',
      shortcut: 'DWO',
      description: 'Detection, window open',
      info: {},
      bitoffs: '14',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Actuator obstructed',
      shortcut: 'ACO',
      description: 'Actuator obstructed',
      info: {},
      bitoffs: '15',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Temperature',
      shortcut: 'TMP',
      description: 'Temperature (linear)',
      info: 'DB_1: Temperature 0...40°C, linear n=0...255 Min.=0 ; Max.=255',
      bitoffs: '16',
      bitsize: '8',
      range: {
        min: '0',
        max: '255'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }]
  }, {
    direction: '2',
    condition: {
      direction: '2'
    },
    datafield: [{
      reserved: {},
      bitoffs: '24',
      bitsize: '4'
    }, {
      reserved: {},
      bitoffs: '29',
      bitsize: '3'
    }, {
      data: 'LRN Bit',
      shortcut: 'LRNB',
      description: 'LRN Bit',
      bitoffs: '28',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Teach-in telegram'
        }, {
          value: '1',
          description: 'Data telegram'
        }]
      }
    }, {
      data: 'Valve position or Temperature Setpoint',
      shortcut: 'SP',
      description: 'Valve position or Temperature set point (linear); selection with DB1.2<br/><br/>Valve position 0…100% in combination with compatible classic controllers the actuator used DB_3;\n<br/><br/>Temperature set point: The actuator can be used as self-sufficient room controller (pi controller) without integration\nin automation systems. Wherever the user wants room conditions to be individually controlled, the actuator can work in combination with a wireless room device (RCU).',
      info: 'DB_3: Valve set point 0...100 %, linear n=0...100\n                Temperature set point 0...40°C, linear n=0...255',
      bitoffs: '0',
      bitsize: '8',
      range: {
        min: '0',
        max: '100 or 255'
      },
      scale: {
        min: '0',
        max: '100 or +40'
      },
      unit: '% or °C'
    }, {
      data: 'Temperature  from RCU',
      shortcut: 'TMP',
      description: 'Temperature actual from RCU = 0b0 (Room controller-unit), see DB1.0<br/><br/>Maintenance mode ("service on"): DB_2.BIT_5: energy memory sufficiently charged =1<br/><br/>DB_2.BIT_4: battery capacity changing battery in the next days, need changing batteries = 0<br/><br/>Status feedback signal (service on, DB_2.BIT_7)',
      info: {
        br: [{}, {}]
      },
      bitoffs: '8',
      bitsize: '8',
      range: {
        min: '255',
        max: '0'
      },
      scale: {
        min: '0',
        max: '+40'
      },
      unit: '°C'
    }, {
      data: 'Run init sequence',
      shortcut: 'RIN',
      description: 'The limit switching measures the travel and signals when an end position has been reached. This end position (valve zero point) in the actuator is stored.',
      info: {},
      bitoffs: '16',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Lift set',
      shortcut: 'LFS',
      description: 'Initialization, adjustment to the valve stroke. The Initialization is switched after receiving the command. The valve is completely opened and closed during initialization.',
      info: {},
      bitoffs: '17',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Valve open / maintenance',
      shortcut: 'VO',
      description: 'After receiving an operation command, the actuator moves the valve in direction open or close.\nwhen reaching the end position, an automatic switch-off procedure is started. In service mode the valve\ncan be set to open or closed always.',
      info: {},
      bitoffs: '18',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Valve closed',
      shortcut: 'VC',
      description: 'valve closed',
      info: {},
      bitoffs: '19',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Summer bit, Reduction of energy consumption',
      shortcut: 'SB',
      description: 'The radio communication between the actuator and the controller is restricted, sleep mode is extended. This functionality can be used for battery powered actuators.',
      info: {},
      bitoffs: '20',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Set Point Selection',
      shortcut: 'SPS',
      description: 'Set Point Selection for DB3',
      info: {},
      bitoffs: '21',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'Valve position (0-100%). Unit respond to controller.'
        }, {
          value: '1',
          description: 'Temperature set point 0...40°C. Unit respond to room sensor and use internal PI loop.'
        }]
      }
    }, {
      data: 'Set point inverse',
      shortcut: 'SPN',
      description: 'Valve set point can be sent to the actuator normal or inverted.\nThe selection is done by DB_1.Bit1. The implementation is done and is controlled in the actuator with DB_3. This function is used in dependence on the type of valve.',
      info: {},
      bitoffs: '22',
      bitsize: '1',
      enum: {
        item: {
          value: '1',
          description: 'true'
        }
      }
    }, {
      data: 'Select function',
      shortcut: 'RCU',
      description: 'RCU or "Service on": After transmitting the command to the actuator, it can be send from the controller or a\nservice device, the actuator sends a status feedback signal (service on, DB_2.BIT_7).',
      info: {},
      bitoffs: '23',
      bitsize: '1',
      enum: {
        item: [{
          value: '0',
          description: 'RCU'
        }, {
          value: '1',
          description: 'service on'
        }]
      }
    }]
  }],
  originalIndex: 122,
  eep: 'a5-20-01',
  rorg_title: '4BS Telegram',
  rorg_number: '0xA5',
  func_title: 'HVAC Components',
  func_number: '0x20',
  submitter: [
    'Kieback + Peter GmbH'
  ]
}
